#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IAImportManager
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AvenueCapital_IAWorking")]
	public partial class StagingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIASource(IASource instance);
    partial void UpdateIASource(IASource instance);
    partial void DeleteIASource(IASource instance);
    #endregion
		
		public StagingDataContext() : 
				base(global::IAImportManager.Properties.Settings.Default.AvenueCapital_IAWorkingConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StagingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StagingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StagingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StagingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<IASource> IASources
		{
			get
			{
				return this.GetTable<IASource>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IASource")]
	public partial class IASource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IASourceID;
		
		private string _FundName;
		
		private string _InvestorAccountName;
		
		private string _OrganizationName;
		
		private string _AccountingCode;
		
		private string _IACategory;
		
		private string _IAStatus;
		
		private System.Nullable<System.DateTime> _DateOpened;
		
		private System.Nullable<double> _InitialInvestment;
		
		private string _PFInvestorType;
		
		private string _PFGroupingCode;
		
		private string _Comments;
		
		private string _AccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIASourceIDChanging(int value);
    partial void OnIASourceIDChanged();
    partial void OnFundNameChanging(string value);
    partial void OnFundNameChanged();
    partial void OnInvestorAccountNameChanging(string value);
    partial void OnInvestorAccountNameChanged();
    partial void OnOrganizationNameChanging(string value);
    partial void OnOrganizationNameChanged();
    partial void OnAccountingCodeChanging(string value);
    partial void OnAccountingCodeChanged();
    partial void OnIACategoryChanging(string value);
    partial void OnIACategoryChanged();
    partial void OnIAStatusChanging(string value);
    partial void OnIAStatusChanged();
    partial void OnDateOpenedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOpenedChanged();
    partial void OnInitialInvestmentChanging(System.Nullable<double> value);
    partial void OnInitialInvestmentChanged();
    partial void OnPFInvestorTypeChanging(string value);
    partial void OnPFInvestorTypeChanged();
    partial void OnPFGroupingCodeChanging(string value);
    partial void OnPFGroupingCodeChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    #endregion
		
		public IASource()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IASourceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IASourceID
		{
			get
			{
				return this._IASourceID;
			}
			set
			{
				if ((this._IASourceID != value))
				{
					this.OnIASourceIDChanging(value);
					this.SendPropertyChanging();
					this._IASourceID = value;
					this.SendPropertyChanged("IASourceID");
					this.OnIASourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundName", DbType="VarChar(255)")]
		public string FundName
		{
			get
			{
				return this._FundName;
			}
			set
			{
				if ((this._FundName != value))
				{
					this.OnFundNameChanging(value);
					this.SendPropertyChanging();
					this._FundName = value;
					this.SendPropertyChanged("FundName");
					this.OnFundNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestorAccountName", DbType="VarChar(255)")]
		public string InvestorAccountName
		{
			get
			{
				return this._InvestorAccountName;
			}
			set
			{
				if ((this._InvestorAccountName != value))
				{
					this.OnInvestorAccountNameChanging(value);
					this.SendPropertyChanging();
					this._InvestorAccountName = value;
					this.SendPropertyChanged("InvestorAccountName");
					this.OnInvestorAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="VarChar(255)")]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this.OnOrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._OrganizationName = value;
					this.SendPropertyChanged("OrganizationName");
					this.OnOrganizationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingCode", DbType="VarChar(255)")]
		public string AccountingCode
		{
			get
			{
				return this._AccountingCode;
			}
			set
			{
				if ((this._AccountingCode != value))
				{
					this.OnAccountingCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountingCode = value;
					this.SendPropertyChanged("AccountingCode");
					this.OnAccountingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IACategory", DbType="VarChar(255)")]
		public string IACategory
		{
			get
			{
				return this._IACategory;
			}
			set
			{
				if ((this._IACategory != value))
				{
					this.OnIACategoryChanging(value);
					this.SendPropertyChanging();
					this._IACategory = value;
					this.SendPropertyChanged("IACategory");
					this.OnIACategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAStatus", DbType="VarChar(255)")]
		public string IAStatus
		{
			get
			{
				return this._IAStatus;
			}
			set
			{
				if ((this._IAStatus != value))
				{
					this.OnIAStatusChanging(value);
					this.SendPropertyChanging();
					this._IAStatus = value;
					this.SendPropertyChanged("IAStatus");
					this.OnIAStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOpened", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOpened
		{
			get
			{
				return this._DateOpened;
			}
			set
			{
				if ((this._DateOpened != value))
				{
					this.OnDateOpenedChanging(value);
					this.SendPropertyChanging();
					this._DateOpened = value;
					this.SendPropertyChanged("DateOpened");
					this.OnDateOpenedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialInvestment", DbType="Float")]
		public System.Nullable<double> InitialInvestment
		{
			get
			{
				return this._InitialInvestment;
			}
			set
			{
				if ((this._InitialInvestment != value))
				{
					this.OnInitialInvestmentChanging(value);
					this.SendPropertyChanging();
					this._InitialInvestment = value;
					this.SendPropertyChanged("InitialInvestment");
					this.OnInitialInvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PFInvestorType", DbType="VarChar(255)")]
		public string PFInvestorType
		{
			get
			{
				return this._PFInvestorType;
			}
			set
			{
				if ((this._PFInvestorType != value))
				{
					this.OnPFInvestorTypeChanging(value);
					this.SendPropertyChanging();
					this._PFInvestorType = value;
					this.SendPropertyChanged("PFInvestorType");
					this.OnPFInvestorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PFGroupingCode", DbType="VarChar(255)")]
		public string PFGroupingCode
		{
			get
			{
				return this._PFGroupingCode;
			}
			set
			{
				if ((this._PFGroupingCode != value))
				{
					this.OnPFGroupingCodeChanging(value);
					this.SendPropertyChanging();
					this._PFGroupingCode = value;
					this.SendPropertyChanged("PFGroupingCode");
					this.OnPFGroupingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(255)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="NChar(12)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
